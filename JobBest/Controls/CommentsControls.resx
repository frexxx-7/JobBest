<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="avatarPicture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>